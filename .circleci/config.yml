# version: 2.1
# jobs:                          #----------------------------------------------★ジョブ
#   build:
#     docker:                    #----------------------------------------------★Executor
#       - image: circleci/ruby:2.7.1
#         environment:
#         #   RAILS_ENV: 'test'
#         #   MYSQL_HOST: 127.0.0.1
#         #   MYSQL_USERNAME: 'root'
#         #   MYSQL_PASSWORD: ''
#         #   MYSQL_PORT: 3306
#           #自身の登録しているユーザに変える。
#           POSTGRES_USER: postgres 
#           PGHOST: 127.0.0.1
#           RAILS_ENV: test
#       - image: circleci/postgres:latest
#         command: mysqld --default-authentication-plugin=mysql_native_password
#         environment:
#           #それぞれ設定
#           POSTGRES_USER: postgres
#           #下記を書けばパスワードなしでデータベースにログインしてくれる。 
#           POSTGRES_HOST_AUTH_METHOD: trust
#           POSTGRES_DB: portfolio_test
#         #   MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
#         #   MYSQL_ROOT_HOST: '%'
#     working_directory: ~/repo
#     steps:                      #---------------------------------------------★ステップ
#       - checkout
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "Gemfile.lock" }}
#             - v1-dependencies-
#       - run:
#           name: install dependencies
#           command: |
#             bundle install --jobs=4 --retry=3 --path vendor/bundle
#       - save_cache:
#           paths:
#           - ./vendor/bundle
#           key: v1-dependencies-{{ checksum "Gemfile.lock" }}
#       - run: mv config/database.yml.ci config/database.yml
#       - run: bundle exec rake db:create
#       - run: bundle exec rake db:schema:load
#       - run:
#           name: RSpec

#           command: |
#             mkdir /tmp/test-results
#             TEST_FILES="$(circleci tests glob "spec/models/users_spec.rb" | \
#               circleci tests split --split-by=timings)"
#             bundle exec rspec \
#               --format progress \
#               --out /tmp/test-results/rspec.xml \
#               --format progress \
#               $TEST_FILES
#       - store_test_results:
#           path: /tmp/test-results
#       - store_artifacts:
#           path: /tmp/test-results
#           destination: test-results

version: 2.1
jobs:
   build:
      docker:
        #アプリのバージョンを指定
        - image: circleci/ruby:2.7.1
          environment:
            #自身の登録しているユーザに変える。
            POSTGRES_USER: postgres 
            PGHOST: 127.0.0.1
            RAILS_ENV: test
        #使ってるデータベースとバージョンを指定する。# 「host: localhost」でアクセスできるサービスコンテナイメージ。
        - image: circleci/postgres:latest
          environment:
            #それぞれ設定
            POSTGRES_USER: postgres
            #下記を書けばパスワードなしでデータベースにログインしてくれる。 
            POSTGRES_HOST_AUTH_METHOD: trust
            POSTGRES_DB: illustrations_test
      #自身のアプリ名にする
      working_directory: ~/Illustrations
      steps:
        - checkout
        #bundle キャッシュをリストアする。公式の設定通り。
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "Gemfile.lock" }}
              - v1-dependencies-
        # bundle install で依存関係をインストールする。公式の設定と多少異なってます。
        - run:
            name: install dependencies
            command: |
              gem install bundler -v 2.1.4
              bundle install --jobs=4 --retry=3 --path vendor/bundle

        # bundle キャッシュを保存する。公式の設定通り。
        - save_cache:
            key: v1-dependencies-{{ checksum "Gemfile.lock" }}
            paths:
              - ./vendor/bundle

        #↓追加する
        - run:
            name: DBの起動を待つ
            command: dockerize -wait tcp://127.0.0.1:5432 -timeout 120s

        - run: bundle exec rake db:create
        - run: bundle exec rake db:schema:load

        # rspecを実行する
        - run:
            name: rspecを実行
            command: bundle exec rspec